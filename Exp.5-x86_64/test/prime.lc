use printf;

void print_board(int board[][8]) {
    int i, j;
    for (i = 0; i < 8; i++) {
        for (j = 0; j < 8; j++) {
            if (board[i][j])
                printf("Q ");
            else printf(". "); 
        }
        printf("\n");
    }
}

int conflict(int board[][8], int row, int col) {
    for (int i = 0; i < row; i++) {
        if (board[i][col]) return 1;
        int j = row - i;
        if (0 < col - j + 1 && board[i][col - j]) return 1;
        if (col + j < 8 && board[i][col + j]) return 1;
    }
    return 0;
}

int solve_one(int board[][8], int row) {
    if (row > 7) {
        print_board(board);
        return 1;
    }
    for (int i = 0; i < 8; i++) {
        if (conflict(board, row, i)) {
        } else {
            board[row][i] = 1;
            if (solve_one(board, row + 1)) return 1;
            board[row][i] = 0;
        }
    }
    return 0;
}

int main() {
    int board[8][8];
    int i, j;
    for (i = 0; i < 8; ++i) {
        for (j = 0; j < 8; ++j) 
            board[i][j] = 0;
    }
    solve_one(board, 0);
    return 0;
}